<?xml version="1.0" encoding="UTF-8"?>
<!-- ============================================================= -->
<!-- MODULE:    NISO STS DTD Customize Classes Module -->
<!-- VERSION:   ANSI/NISO Z39.102-2017, STS: -->
<!-- Standards Tag Suite (Version 1.0) -->
<!-- DATE:      October 2017 -->
<!---->
<!-- ============================================================= -->
<!-- PUBLIC DOCUMENT TYPE DEFINITION -->
<!-- TYPICAL INVOCATION -->
<!--
  "-//NISO//DTD NISO STS DTD Customize Classes v1.0 20171031//EN"
       Delivered as file "NISO-STS-classes1.ent"
-->
<!-- ============================================================= -->
<!-- SYSTEM:     NISO Standards Tag Suite (NISO STS) -->
<!---->
<!-- This new module extends the capabilities of -->
<!-- ISO STS V1.1 DTD. -->
<!---->
<!-- PURPOSE:    To declare the Parameter Entities (PEs) used to -->
<!-- over-ride named element classes in the underlying -->
<!-- JATS (Z39.96) Journal Publishing DTD and BITS DTD -->
<!-- modules. -->
<!---->
<!-- Note: Since PEs must be declared before they -->
<!-- are used, this module must be called before the -->
<!-- content modules that declare elements. -->
<!---->
<!-- CONTAINS:   PEs for changing the contents of the default -->
<!-- element classes (names ending in '.class'). -->
<!---->
<!-- CREATED BY: Mulberry Technologies, Inc. -->
<!-- Deborah Aleyne Lapeyre and B. Tommie Usdin -->
<!-- in support of NISO and the NISO STS Committee. -->
<!-- Mulberry Technologies work was supported by the -->
<!-- American Society of Mechanical Engineers (ASME) -->
<!-- and ASTM International. -->
<!---->
<!-- COPYRIGHT AND LICENSE: -->
<!-- Copyright Â© 2017 by ISO, the American Society of -->
<!-- Mechanical Engineers (ASME), ASTM International, -->
<!-- Mulberry Technologies, Inc., and the National -->
<!-- Information Standards Organization. This work is -->
<!-- made available under a Creative Commons -->
<!--              Attribution-ShareAlike 4.0 International License: -->
<!-- http://creativecommons.org/licenses/by-sa/4.0/ -->
<!---->
<!-- This work is licensed under a Creative Commons -->
<!-- Attribution-ShareAlike 4.0 International License. -->
<!-- To view a copy of this license, visit -->
<!-- http://creativecommons.org/licenses/by-sa/4.0/ -->
<!--              or send a letter to Creative Commons, PO Box 1866, -->
<!-- Mountain View, CA 94042, USA -->
<!---->
<!-- ORIGINAL CREATION DATE: -->
<!-- October 2016 -->
<!---->
<!-- ============================================================= -->
<!-- ============================================================= -->
<!-- DTD VERSION/CHANGE HISTORY -->
<!-- ============================================================= -->
<!--
  
  Version  Reason/Occasion                   (who) vx.x (yyyy-mm-dd)
       =============================================================
-->
<!-- ============================================================= -->
<!-- PHRASE CLASS ELEMENTS -->
<!-- ============================================================= -->
<!-- INLINE TEXT ELEMENTS -->
<!--
  Non-block display elements that set or
  display inline with the text
-->
<grammar xmlns="http://relaxng.org/ns/structure/1.0">
  <define name="inline-text.class">
    <choice>
      <ref name="inline-graphic"/>
      <ref name="private-char"/>
    </choice>
  </define>
  <!-- PHRASE CLASS ELEMENTS -->
  <!--
    Small inline elements, that surround a word
    or phrase in the text because the subject
    (content) should be identified as something
    special or different
  -->
  <define name="phrase.class">
    <choice>
      <ref name="abbrev"/>
      <ref name="index-term"/>
      <ref name="index-term-range-end"/>
      <ref name="milestone-end"/>
      <ref name="milestone-start"/>
      <ref name="named-content"/>
      <ref name="styled-content"/>
    </choice>
  </define>
  <!-- SMALL ACCESSIBILITY CLASS ELEMENTS -->
  <!--
    Elements added to make it easier to process
    journal articles in ways that are more
    accessible to people and devices with special
    needs, for example the visually handicapped.
      <alt-text> is a short phrase description of
    an objects. This class is for use when
    <long-desc> is just too much.
  -->
  <define name="small-access.class">
    <choice>
      <ref name="alt-text"/>
      <ref name="long-desc"/>
    </choice>
  </define>
  <!-- FOOTNOTE ELEMENT -->
  <define name="fn.class">
    <ref name="fn"/>
  </define>
  <!-- ============================================================= -->
  <!-- NOTHING BUT PARAGRAPH CLASS -->
  <!-- ============================================================= -->
  <!-- NOTHING BUT PARAGRAPH CLASS -->
  <!--
    To hold the paragraph element <p>, alone.
    This parameter entity should be left
    untouched by any customization
  -->
  <define name="nothing-but-para.class">
    <ref name="p"/>
  </define>
  <!-- ============================================================= -->
  <!-- BLOCK-DISPLAY CLASS -->
  <!-- ============================================================= -->
  <!-- BLOCK DISPLAY CLASS ELEMENTS -->
  <!--
    Graphical or other image-related elements.
    The display elements may occur within
    the text of a table cell or paragraph
    although they are typically at the same
    hierarchical level as a paragraph.
    ISO added <non-normative-note> and 
    <non-normative-example> elements to JATS.
    NISO added <normative-note> and 
    <normative-example>
  -->
  <define name="block-display.class">
    <choice>
      <ref name="address"/>
      <ref name="alternatives"/>
      <ref name="array"/>
      <ref name="boxed-text"/>
      <ref name="chem-struct-wrap"/>
      <ref name="code"/>
      <ref name="fig"/>
      <ref name="fig-group"/>
      <ref name="graphic"/>
      <ref name="media"/>
      <ref name="non-normative-note"/>
      <ref name="normative-note"/>
      <ref name="non-normative-example"/>
      <ref name="normative-example"/>
      <ref name="notes-group"/>
      <ref name="preformat"/>
      <ref name="supplementary-material"/>
      <ref name="table-wrap"/>
      <ref name="table-wrap-group"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- EDITING INSTRUCTIONS CLASS -->
  <!-- ============================================================= -->
  <!-- EDITING INSTRUCTIONS CLASS -->
  <!--
    Class to hold just the <editing-instruction>
    element, so that can be added to classes
    defined by JATS as well as by NIS STS.
  -->
  <define name="editing-instructions.class">
    <ref name="editing-instruction"/>
  </define>
  <!-- ============================================================= -->
  <!-- CITATION CLASS -->
  <!-- ============================================================= -->
  <!-- CITATION CLASS ELEMENTS -->
  <!--
    Reference to an external document, as used
    within, for example, the text of a
    paragraph
  -->
  <define name="citation.class">
    <choice>
      <ref name="citation-alternatives"/>
      <ref name="element-citation"/>
      <ref name="mixed-citation"/>
      <ref name="std"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- EMPHASIS CLASS -->
  <!-- ============================================================= -->
  <!-- EMPHASIS RENDITION ELEMENTS -->
  <!--
    Add 'num'. It doesn't fit perfectly 
    here, but it is sometimes used to put
    numeric data into a different font.  And
    the only other class as ubiquitous as 
    %emphasis.class is %subsup.class, which 
    is not more suitable.
  -->
  <!-- EMPHASIS RENDITION ELEMENTS -->
  <!-- All the face markup plus <ruby> -->
  <define name="emphasis.class">
    <choice>
      <ref name="bold"/>
      <ref name="fixed-case"/>
      <ref name="italic"/>
      <ref name="monospace"/>
      <ref name="num"/>
      <ref name="overline"/>
      <ref name="roman"/>
      <ref name="sans-serif"/>
      <ref name="sc"/>
      <ref name="strike"/>
      <ref name="underline"/>
      <ref name="ruby"/>
    </choice>
  </define>
  <!-- FACE MARKUP CLASS ELEMENTS -->
  <!-- All the face markup without <ruby> -->
  <define name="face-markup.class">
    <choice>
      <ref name="bold"/>
      <ref name="fixed-case"/>
      <ref name="italic"/>
      <ref name="monospace"/>
      <ref name="num"/>
      <ref name="overline"/>
      <ref name="roman"/>
      <ref name="sans-serif"/>
      <ref name="sc"/>
      <ref name="strike"/>
      <ref name="underline"/>
    </choice>
  </define>
  <!-- BOLD AND ITALIC ELEMENTS -->
  <!-- Only <bold> and <italic> emphasis -->
  <define name="bold-italic.class">
    <choice>
      <ref name="bold"/>
      <ref name="italic"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- FIGURES CLASS -->
  <!-- ============================================================= -->
  <define name="figures.class">
    <choice>
      <ref name="fig"/>
      <ref name="fig-group"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- JUST-PARA CLASS -->
  <!-- ============================================================= -->
  <!-- See also nothing-but-para.class. -->
  <!-- JUST PARAGRPAH CLASS -->
  <!--
    This oddly named class was originally just
    what it says, only a <p> element. But if you
    wanted to allow something everywhere a
    paragraph was used, this seemed like a 
    useful parameter entity. Thus the notes
    and examples were added. A new class:
    'nothing-but-para.class' was added to hold 
    just the <p> element.
  -->
  <define name="just-para.class">
    <choice>
      <ref name="p"/>
      <ref name="normative-note"/>
      <ref name="non-normative-note"/>
      <ref name="normative-example"/>
      <ref name="non-normative-example"/>
      <ref name="notes-group"/>
    </choice>
  </define>
  <!-- All Notes Minus Notes Group -->
  <define name="notes-group-inside.class">
    <choice>
      <ref name="p"/>
      <ref name="non-normative-note"/>
      <ref name="non-normative-example"/>
      <ref name="normative-note"/>
      <ref name="normative-example"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- NORMATIVE AND NON-NORMATIVE CLASSES -->
  <!-- ============================================================= -->
  <define name="all-notes.class">
    <choice>
      <ref name="non-normative-note"/>
      <ref name="normative-note"/>
      <ref name="non-normative-example"/>
      <ref name="normative-example"/>
      <ref name="notes-group"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- SECTION CLASS -->
  <!-- ============================================================= -->
  <!-- SECTION CLASS ELEMENTS -->
  <!--
    Information for the reader that is at the
    same structural level as a Section, which
    is a headed structure full of smaller
    elements such as paragraphs.
    
    Added 'term-sec', a section containing
    terminological data.
  -->
  <define name="sec.class">
    <choice>
      <ref name="sec"/>
      <ref name="term-sec"/>
    </choice>
  </define>
  <define name="sec-only.class">
    <ref name="sec"/>
  </define>
  <!-- ============================================================= -->
  <!-- SIMPLE-LINK CLASS -->
  <!-- ============================================================= -->
  <!-- SIMPLE LINKS/CROSS-REFERENCES CLASS -->
  <!--
    The smaller and simpler linking elements
    that might be inside, for example, a
    Keyword <kwd>
  -->
  <define name="simple-link.class">
    <choice>
      <ref name="fn"/>
      <ref name="target"/>
      <ref name="tbx.entailedTerm"/>
      <ref name="xref"/>
    </choice>
  </define>
  <!-- TERM-SECTION LINKS CLASS -->
  <!--
    The smaller and simpler linking elements
    that might be inside components of the
    Term and Definition section, such as
    Pronunciation <pronunciation>
  -->
  <define name="term-sec-link.class">
    <choice>
      <ref name="fn"/>
      <ref name="ext-link"/>
      <ref name="uri"/>
      <ref name="xref"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- <STD> CONTENT CLASS -->
  <!-- ============================================================= -->
  <!-- STD-CONTENT CLASS ELEMENTS -->
  <!--
    Elements that can occur within a <std>
    element and are not otherwise provided for.
    These are primarily semantic standards
    identification elements, to be used as part
    of the citing of a standard.
  -->
  <define name="std-content.class">
    <choice>
      <ref name="ext-link"/>
      <ref name="fn"/>
      <ref name="std-id"/>
      <ref name="std-id-group"/>
      <ref name="std-ref"/>
      <ref name="title"/>
      <ref name="uri"/>
      <ref name="xref"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- <STD-REF> CLASSES -->
  <!-- ============================================================= -->
  <!-- STD-REF CLASS -->
  <!--
                        Elements that can occur where <std-ref>
    can occur (initially only <std-ref> itself)
  -->
  <define name="std-ref.class">
    <ref name="std-ref"/>
  </define>
  <!-- STD-REF-CONTENT CLASS ELEMENTS -->
  <!--
    Elements that can occur within a <std-ref>
    element. Should be the same as the contents
    of <std-ident>, since <std-ref> is a 
    convenience precombination of those elements
    or a #PCDATA equivalent.
  -->
  <define name="std-ref-content.class">
    <choice>
      <ref name="originator"/>
      <ref name="doc-type"/>
      <ref name="doc-number"/>
      <ref name="part-number"/>
      <ref name="edition"/>
      <ref name="isbn"/>
      <ref name="suppl-type"/>
      <ref name="suppl-number"/>
      <ref name="suppl-version"/>
      <ref name="version"/>
      <ref name="year"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- STD-ID CLASS -->
  <!-- ============================================================= -->
  <!-- STD-ID CLASS -->
  <!--
    Elements that can occur where <std-id>
    can occur (initially only <std-id> itself)
  -->
  <define name="std-id.class">
    <ref name="std-id"/>
  </define>
  <!-- ============================================================= -->
  <!-- SUB-PART CLASS -->
  <!-- ============================================================= -->
  <!-- SUB-PART CLASS ELEMENTS -->
  <!--
    Elements that can occur where a 'sub-part'
    can occur.
  -->
  <define name="sub-part.class">
    <ref name="sub-part"/>
  </define>
  <!-- ============================================================= -->
  <!-- TERM-SECTION CLASSES -->
  <!-- ============================================================= -->
  <!-- TERM-SECTION CLASS ELEMENTS -->
  <!--
    Specialized sections for terminological 
    data, excluding normal sections.
  -->
  <define name="term-sec.class">
    <ref name="term-sec"/>
  </define>
  <!-- TERM-SECTION CLASS ELEMENTS -->
  <!--
    Specialized sections for terminological 
    data, excluding normal sections.
  -->
  <define name="inside-term-sec-semantics.class">
    <choice>
      <ref name="tbx.termEntry"/>
      <ref name="term-display"/>
    </choice>
  </define>
  <!-- RELATED TERM CLASS -->
  <!--
    Holds the element <related-term>, so it can 
    used in <std-def-list> content models.
  -->
  <!-- TERM SEMANTIC ELEMENTS CLASS -->
  <!--
    The semantic term-related elements that may
    be used inside a <term-display> element.
    Used inside %inside-term-display.mix, to
    define the <term-display> content model.
  -->
  <define name="term-semantics.class">
    <choice>
      <ref name="def"/>
      <ref name="part-of-speech"/>
      <ref name="pronunciation"/>
      <ref name="related-term"/>
      <ref name="term"/>
      <ref name="term-source"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- ADOPTION CONTENT CLASS -->
  <!-- ============================================================= -->
  <define name="adoption-content.class">
    <choice>
      <ref name="standard"/>
      <ref name="adoption"/>
      <ref name="std-xref"/>
      <ref name="xi.include"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- XINCLUDE CLASS -->
  <!-- ============================================================= -->
  <!-- XINCLUDE CLASS -->
  <!--
    Class to hold just the <xi:include> element
    so that it can be used in book front matter
    as well as other places.
  -->
  <define name="xinclude.class">
    <ref name="xi.include"/>
  </define>
  <!-- ============================================================= -->
  <!-- BACK MATTER CLASSES -->
  <!-- ============================================================= -->
  <!-- BACK MATTER CLASS -->
  <!--
    Ancillary elements, typically used in the
    back matter of an article, section, etc.
  -->
  <!--
    NISO STS: Removed <ack>, which comes into the
    model by way of front-back.class
  -->
  <define name="back.class">
    <choice>
      <ref name="app-group"/>
      <ref name="bio"/>
      <ref name="fn-group"/>
      <ref name="glossary"/>
      <ref name="ref-list"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- INDEX CLASSES -->
  <!-- ============================================================= -->
  <!-- INDEX BACK MATTER CLASS -->
  <!--
    The BITS Index elements, used in back matter
    of a standards document.
  -->
  <define name="back-index.class">
    <choice>
      <ref name="index"/>
      <ref name="index-group"/>
    </choice>
  </define>
  <!-- INDEX CLASS -->
  <!-- Used for grouping multiple Indexes. -->
  <define name="index.class">
    <ref name="index"/>
  </define>
  <!-- INDEX DIVISION CLASS -->
  <!--
    Division, typically for the purposes of
    display, in a structural index, for example
    a division holding the heading "A" and
    all of the initial alphabetically
    arranged index entries.
  -->
  <define name="index-div.class">
    <ref name="index-div"/>
  </define>
  <!-- INDEX ENTRY CLASS -->
  <!-- Entry in a structural Index. -->
  <define name="index-entry.class">
    <ref name="index-entry"/>
  </define>
  <!-- NAVIGATION POINTER CLASS -->
  <!--
    Navigation pointer for use in a structural
    Index or table of contents.
  -->
  <define name="nav-pointer.class">
    <ref name="nav-pointer"/>
  </define>
  <!-- SEE AND SEE-ALSO ENTRY CLASS -->
  <!--
    See (use) and see-also (related) entries
    in a structural Index.
  -->
  <define name="see-also-see-entry.class">
    <choice>
      <ref name="see-entry"/>
      <ref name="see-also-entry"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- TABLE OF CONTENTS CLASSES -->
  <!-- ============================================================= -->
  <!-- FRONT AND BACK CLASS -->
  <!--
    Ancillary elements, typically used in the
    front or back matter of an article
  -->
  <define name="front-back.class">
    <choice>
      <ref name="ack"/>
      <ref name="notes"/>
      <ref name="toc"/>
      <ref name="toc-group"/>
    </choice>
  </define>
  <!-- TABLE OF CONTENTS CLASS -->
  <!-- Used for grouping multiple Tables of Contents. -->
  <define name="toc.class">
    <ref name="toc"/>
  </define>
  <!-- TABLE OF CONTENTS DIVISION CLASS -->
  <!--
    Division, typically for the purposes of
    display, in a structural ToC, for example
    a division holding the first Part of a
    3-part book, and the titles of all the
    chapters in that Part.
  -->
  <define name="toc-div.class">
    <ref name="toc-div"/>
  </define>
  <!-- TABLE OF CONTENTS ENTRY CLASS -->
  <!-- Entry in a structural Table of Contents. -->
  <define name="toc-entry.class">
    <ref name="toc-entry"/>
  </define>
  <!-- ABSTRACT CLASS FOR TABLE OF CONTENTS -->
  <!--
    Used to add the <abstract> and
    <trans-abstract> elements to a Table of
    Contents entry <toc-entry>.
    This is needed for only for purposes of
    parsing.
  -->
  <define name="toc-abstract.class">
    <notAllowed/>
  </define>
  <!-- ============================================================= -->
  <!-- BOTH INDEX AND BITS TOC CLASS -->
  <!-- ============================================================= -->
  <!-- TABLE BODY CLASS -->
  <!--
    To include just a table body <tbody>
    element. Both XHTML and OASIS table types.
  -->
  <define name="tbody.class">
    <ref name="tbody"/>
  </define>
  <!-- ============================================================= -->
  <!-- BOTH INDEX AND BITS TOC CLASS -->
  <!-- ============================================================= -->
  <!-- STRUCTURAL LINKING CLASS -->
  <!--
    Elements that might be used to make a link
    in a structural Table of Contents, Index,
    or similar non-generated structure.
  -->
  <define name="struct-link.class">
    <choice>
      <ref name="ext-link"/>
      <ref name="nav-pointer"/>
      <ref name="nav-pointer-group"/>
    </choice>
  </define>
  <!-- ============================================================= -->
  <!-- TBX TERM CLASSES -->
  <!-- ============================================================= -->
  <define name="niso-sts-termEntry-additions.class">
    <ref name="index-term"/>
  </define>
  <!-- ============================================================= -->
  <!-- JUST FOR THE SAKE OF THE PARSER -->
  <!-- ============================================================= -->
  <define name="x.class">
    <ref name="x"/>
  </define>
</grammar>
<!-- ================== End NISO STS Class Overrides ============= -->
